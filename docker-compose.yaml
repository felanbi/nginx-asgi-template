networks:
  back:
    name: backnet
    external: true
  app:
    name: appnet
    external: true

services:
  db:
    image: postgres:14.8
    container_name: postgres
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      # interval: 1m30s
      # timeout: 30s
      # retries: 5
      # start_period: 30s
    volumes:
      - ./pgdata:/data
    networks:
      - back

  back:
    container_name: django-fastapi
    env_file: ./back/.env
    build: ./back
    healthcheck:
      test: ["CMD-SHELL", "lsof -i:8000 | grep -i listen"]
      # interval: 1m30s
      # timeout: 30s
      # retries: 5
      # start_period: 30s
    ports:
      - 8000:8000
    volumes:
      - ./back/db.sqlite3:/app/db.sqlite3
    networks:
      - back
      - app
    depends_on:
      db:
        condition: service_healthy

  server:
    container_name: nginx
    env_file: .env
    build: .
    ports:
      - 80:80
    networks:
      - app
    depends_on:
      back:
        condition: service_healthy